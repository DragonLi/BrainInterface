using System.Collections.Generic;
using System.Windows.Input;
using Abt.Controls.SciChart.Example.Data;
using Abt.Controls.SciChart.Example.MVVM;
using Abt.Controls.SciChart.Model.DataSeries;

namespace Abt.Controls.SciChart.Example.Examples.IWantTo.UseSciChartWithMvvm
{
    public class BindToDataSeriesSetViewModel : BaseViewModel
    {
        private IDataSeries<double, double> _dataSeries0;
        private RandomWalkGenerator _dataSource;

        public BindToDataSeriesSetViewModel()
        {
            // Create a DataSeriesSet
            _dataSeries0 = new XyDataSeries<double, double>();

            // Create a single data-series
            _dataSource = new RandomWalkGenerator();
            var data = _dataSource.GetRandomWalkSeries(1000);

            // Append data to series.
            _dataSeries0.Append(data.XData, data.YData);
        }

        // Databound to via SciChartSurface.DataSet in the view
        public IDataSeries<double, double> ChartData
        {
            get { return _dataSeries0; }
            set 
            {
                _dataSeries0 = value;
                OnPropertyChanged("ChartData");
            }
        }

        public ICommand AppendDataCommand
        {
            get { return new ActionCommand(AppendData); }
        }

        // Called when the AppendDataCommand is invoked via button click on the view
        private void AppendData()
        {
            var newData = _dataSource.GetRandomWalkSeries(50);

            _dataSeries0.Append(newData.XData, newData.YData);
        }
    }
}